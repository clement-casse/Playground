name: "webservice-go/backend"
on:
  pull_request:
    paths:
      - "webservice-go/**/*.go"
      - "webservice-go/go.*"
  push:
    branches:
      - 'main'
    paths:
      - "webservice-go/**"

permissions:
  contents: read
  pull-requests: read
  checks: write

env:
  GO_VERSION: "~1.22"
  NODE_VERSION: "20"

defaults:
  run:
    working-directory: webservice-go

jobs:
  Generate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          check-latest: true
          cache-dependency-path: "webservice-go/go.sum"
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          cache-dependency-path: "webservice-go/web/app/package-lock.json"
      - name: NPM clean install
        working-directory: webservice-go/web/app/
        run: npm clean-install
      - name: Go Generate
        run: go generate -v ./...
      - name: Upload frontend dist as artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: webservice-go/web/app/dist/
          retention-days: 1
          if-no-files-found: error
      - name: Upload mocks as artifact
        uses: actions/upload-artifact@v4
        with:
          name: test-mocks
          path: webservice-go/test/mocks/
          retention-days: 1
          if-no-files-found: error

  Validate-Go:
    runs-on: ubuntu-latest
    needs: Generate
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          check-latest: true
          cache-dependency-path: "webservice-go/go.sum"
      - name: Download generated files
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: webservice-go/web/app/dist/
      - name: Download generated mocks
        uses: actions/download-artifact@v4
        with:
          name: test-mocks
          path: webservice-go/test/mocks/
      - name: Go Vet
        run: go vet -json ./...
      - name: Go fmt
        run: test -z $(go fmt ./...)
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
          skip-pkg-cache: true
          working-directory: webservice-go

  Test-Go:
    runs-on: ubuntu-latest
    needs: Generate
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          check-latest: true
          cache-dependency-path: "webservice-go/go.sum"
      - name: Download generated files
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: webservice-go/web/app/dist/
      - name: Download generated mocks
        uses: actions/download-artifact@v4
        with:
          name: test-mocks
          path: webservice-go/test/mocks/
      - name: Go Test Coverage
        run: |
          go test -failfast -race -covermode=atomic -coverprofile=coverage.out ./...
          sed -i '/_gen.go:/d' coverage.out
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.1.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          codecov_yml_path: ./codecov.yaml
          flags: webservice-go
