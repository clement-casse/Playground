name: "Otelcol-custom"
on:
  pull_request:
    paths:
      - "otelcol-custom/**/*.go"
      - "otelcol-custom/go.*"
  push:
    branches:
      - 'main'
    paths:
      - "otelcol-custom/**"

permissions:
  contents: read
  pull-requests: read
  checks: write

env:
  GO_VERSION: "~1.21"

defaults:
  run:
    working-directory: otelcol-custom

jobs:
  Validate:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module:
          - .
          - exporter/cyphergraphexporter
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          check-latest: true
          cache-dependency-path: "otelcol-custom/${{ matrix.module }}/go.sum"
      - name: Go Vet
        run: go vet -json ./...
      - name: Go fmt
        run: test -z $(go fmt ./...)
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
          skip-pkg-cache: true
          working-directory: otelcol-custom

  Test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module:
          - .
          - exporter/cyphergraphexporter
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          check-latest: true
          cache-dependency-path: "otelcol-custom/${{ matrix.module }}/go.sum"
      - name: Go Test Coverage
        working-directory: otelcol-custom/${{ matrix.module }}
        run: |
          go test -failfast -race -covermode=atomic -coverprofile=coverage.out ./...
          sed -i '/_gen.go:/d' coverage.out
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.1.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: otelcol-custom/${{ matrix.module }}/coverage.out
          flags: otelcol-custom,${{ matrix.module }}
